
Imports ReglasNegocio
Imports SaimtControles
Imports Entidades

Public Class frmManProcedimientos
    Inherits frmMantenimientos
    Dim dtTablaProcedimientos As New DataTable
#Region "Funciones Sobrescritas"

    Private Sub ConstruirTable()
        dtTablaProcedimientos.Columns.Add("pcdmId", GetType(String))
        dtTablaProcedimientos.Columns.Add("pcdmNombre", GetType(String))
        dtTablaProcedimientos.Columns.Add("pcdmDescripcion", GetType(String))
        dtTablaProcedimientos.Columns.Add("pcdmcActivo", GetType(Boolean))
    End Sub

    'Protected Overrides Sub guardar()
    '    Try

    '        If String.IsNullOrEmpty(txtpcdmId.EditValue) Then
    '            SaimtMessageBox.mostrarAlertaAdvertencia("El codigo del Proceso no se ha Generado")
    '            txtpcdmId.Focus()
    '            Return
    '        End If

    '        If String.IsNullOrEmpty(txtpcdmNombre.EditValue) Then
    '            SaimtMessageBox.mostrarAlertaAdvertencia("Ingrese el Nombre del Proceso")
    '            txtpcdmNombre.Focus()
    '            Return
    '        End If

    '        If String.IsNullOrEmpty(txtpcdmDescripcion.EditValue) Then
    '            SaimtMessageBox.mostrarAlertaAdvertencia("La Descripcion del Proceso es necesaria")
    '            txtpcdmDescripcion.Focus()
    '            Return
    '        End If

    '        Dim loProceso As EEProcesos = New EEProcesos() With {.ProcId = txtProcId.Text,
    '                                                             .ProcNombre = txtProcNombre.Text,
    '                                                             .ProcDescripcion = txtProcDescripcion.Text,
    '                                                             .ProcActivo = chkProcActivo.Checked}


    '        If GEstadoNuevo Then
    '            MantenimientosBL.Instancia.procesosGuardar(loProceso)
    '        Else
    '            MantenimientosBL.Instancia.procesosActualizar(loProceso)
    '        End If
    '        Me.enabledGA = False
    '        MyBase.guardar()
    '    Catch ex As Exception
    '        SaimtMessageBox.mostrarAlertaError(ex.Message)
    '    End Try
    'End Sub

    'Protected Overrides Sub nuevo()
    '    MyBase.nuevo()
    '    txtProcId.Text = MantenimientosBL.Instancia.procesosNewCodigo()
    '    txtProcId.Properties.ReadOnly = True
    'End Sub

    'Protected Overrides Sub Buscar()
    '    Try
    '        dtTablaProcedimientos.Rows.Clear()
    '        GValorTextoBuscado = txtBuscar.Text
    '        GCriterioBuscado = cbBuscarPor.SelectedIndex

    '        Dim ListaProcesos As List(Of EEProcesos) = MantenimientosBL.Instancia.procesosListarXCriterios(GCriterioBuscado, GValorTextoBuscado)
    '        If ListaProcesos IsNot Nothing Then
    '            For Each frow As EEProcesos In ListaProcesos
    '                dtTablaProcedimientos.LoadDataRow(New Object() {frow.ProcId, frow.ProcNombre, frow.ProcDescripcion, frow.ProcActivo}, True)
    '            Next
    '            gvListado.BestFitColumns()
    '            gvListado.SelectRow(0)
    '            dgvListado_Click(Nothing, Nothing)
    '        End If
    '        MyBase.Buscar()
    '    Catch ex As Exception
    '        SaimtMessageBox.mostrarAlertaError(ex.Message)
    '    End Try
    'End Sub

    'Protected Overrides Sub seleccionarListado()
    '    Try
    '        If Me.gvListado.DataRowCount <> 0 Then

    '            txtProcId.EditValue = gvListado.GetRowCellValue(Me.gvListado.GetSelectedRows(0), "procId").ToString()
    '            GIdRegistroActual = gvListado.GetRowCellValue(Me.gvListado.GetSelectedRows(0), "procId").ToString()
    '            txtProcNombre.EditValue = gvListado.GetRowCellValue(Me.gvListado.GetSelectedRows(0), "procNombre").ToString()
    '            txtProcDescripcion.EditValue = gvListado.GetRowCellValue(Me.gvListado.GetSelectedRows(0), "procDescripcion").ToString()
    '            chkProcActivo.Checked = gvListado.GetRowCellValue(Me.gvListado.GetSelectedRows(0), "procActivo").ToString()
    '            MyBase.seleccionarListado()
    '        End If
    '    Catch ex As Exception
    '        SaimtMessageBox.mostrarAlertaError(ex.Message)
    '    End Try
    'End Sub

    'Protected Overrides Sub Editar()
    '    MyBase.editar()
    '    txtProcId.Properties.ReadOnly = True
    'End Sub

#End Region
End Class