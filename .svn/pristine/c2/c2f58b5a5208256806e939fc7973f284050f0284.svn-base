Imports SaimtControles
Imports ReglasNegocio
Imports Entidades
Imports System.IO
Public Class frmEnviarDoc
    Public Sub New()
        ' Llamada necesaria para el diseñador.
        InitializeComponent()
        ' Agregue cualquier inicialización después de la llamada a InitializeComponent().
    End Sub
    Private ReadOnly vDocId As String = Nothing
    Private ReadOnly vTTramiteId As String = Nothing
    Private ReadOnly vEstMovId As String = Nothing
    Private ReadOnly vtDocId As String = Nothing
    Private ReadOnly vOrigenId As String = Nothing
    Private ReadOnly cargoOrigen As String = Nothing
    'Lista Manejo Archivos
    Dim ListaTemporalArchivosEliminados As List(Of String) = New List(Of String)
    Dim ListaTemporalArchivosNuevos As List(Of EEInmArchivos) = New List(Of EEInmArchivos)
    Dim ListaTemporalArchivosEditados As List(Of EEInmArchivos) = New List(Of EEInmArchivos)
    Dim dtArchivos As DataTable = New DataTable()

    Public Sub New(v_DocId As String, v_TTramiteId As String, v_TDocId As String, cargo As String, v_origenId As String, v_EstMovId As String)
        ' Llamada necesaria para el diseñador.
        InitializeComponent()
        ' Agregue cualquier inicialización después de la llamada a InitializeComponent().
        vDocId = v_DocId
        vTTramiteId = v_TTramiteId
        vtDocId = v_TDocId
        vOrigenId = v_origenId
        cargoOrigen = cargo
        vEstMovId = v_EstMovId
    End Sub
    Public Sub New(v_DocId As String, v_TTramiteId As String, v_TDocId As String, cargo As String, v_origenId As String)
        ' Llamada necesaria para el diseñador.
        InitializeComponent()
        ' Agregue cualquier inicialización después de la llamada a InitializeComponent().
        vDocId = v_DocId
        vTTramiteId = v_TTramiteId
        vtDocId = v_TDocId
        vOrigenId = v_origenId
        cargoOrigen = cargo
    End Sub
    Dim InstitucionId As String
    Dim Mensaje As String
    Enum Cls_TramiteDoc
        tgInstitucion = 82
        tgArea = 83
        tgCargo = 84
        tgEstadoTramite = 89
        tgEstMovVstgEstMov = 99
        tgTipoDestino = 96
        tgTipoDestinoVsEstado = 100
    End Enum
    Dim dtTablaGeneral As DataTable = New DataTable()

#Region "Construir Table"

    Private Sub ConstruirTableArchivos()
        dtArchivos.Columns.Add("inmArchId", GetType(String))
        dtArchivos.Columns.Add("inmArchNombre", GetType(String))
        dtArchivos.Columns.Add("inmArchDescripcion", GetType(String))
        dtArchivos.Columns.Add("tgTipoArchId", GetType(String))
        dtArchivos.Columns.Add("inmArch", GetType(Byte()))
        dtArchivos.Columns.Add("inmArchExt", GetType(String))
        dtArchivos.Columns.Add("inmArchPrincipal", GetType(Boolean))
        dtArchivos.Columns.Add("inmArchActivo", GetType(Boolean))

        dtArchivos.Columns("inmArchId").ColumnMapping = MappingType.Hidden
        dtArchivos.Columns("tgTipoArchId").ColumnMapping = MappingType.Hidden
        dtArchivos.Columns("inmArch").ColumnMapping = MappingType.Hidden

        dtArchivos.Columns("inmArchNombre").Caption = "Nombre"
        dtArchivos.Columns("inmArchDescripcion").Caption = "Descripcion"
        dtArchivos.Columns("inmArchExt").Caption = "Extension"
        dtArchivos.Columns("inmArchPrincipal").Caption = "Principal"
        dtArchivos.Columns("inmArchActivo").Caption = "Activo"
    End Sub

    Private Sub ConstruirTable()
        dtTablaGeneral.Columns.Add("DestinoId", GetType(String))
        dtTablaGeneral.Columns.Add("MovPerPara", GetType(String))
        dtTablaGeneral.Columns.Add("tgInstitucion", GetType(String))
        dtTablaGeneral.Columns.Add("tgArea", GetType(String))
        dtTablaGeneral.Columns.Add("tgCargo", GetType(String))
        dtTablaGeneral.Columns.Add("tgTipoDestinoId", GetType(String))
        dtTablaGeneral.Columns.Add("tgTipoDestino", GetType(String))
        dtTablaGeneral.Columns.Add("Comentario", GetType(String))

    End Sub


#End Region

    Private Sub frmEnviarDoc_Load(sender As System.Object, e As System.EventArgs) Handles MyBase.Load
        ConstruirTable()
        ' gvDestinos.DataSource = dtTablaGeneral
        sCboEstado.mColumnas(SaimtComboBoxLookUp.Entidades.TablaGeneral)
        sCboEstado.Properties.DisplayMember = "TgNombre"
        sCboEstado.Properties.ValueMember = "TgCodigo"
        If vEstMovId Is Nothing Or vEstMovId = "" Then
            sCboEstado.Properties.DataSource = MantenimientosBL.Instancia.tablageneralListarXClsId(Cls_TramiteDoc.tgEstadoTramite)
        Else
            sCboEstado.Properties.DataSource = MantenimientosBL.Instancia.tablageneralListar_XClsId_XTgExtra(Cls_TramiteDoc.tgEstMovVstgEstMov, vEstMovId)
        End If
        sCboEstado.ItemIndex = 0
        txtdocID.EditValue = vDocId
        txtdocID.Properties.ReadOnly = True
        btnInstitucion.Enabled = False
        sTxtInstitucion.Properties.ReadOnly = True
        sTxtInstitucion.EditValue = "SERVICIO DE ADMINISTRACIÓN DE INMUEBLES MUNICIPALES DE TRUJILLO"
        InstitucionId = "0001"
        Dim listaJeraquia As New List(Of EEJerarquiaSTD)
        Dim JerDeId As String = cargoOrigen
        Dim valido As Boolean = False
        listaJeraquia = MantenimientosBL.Instancia.jerarquiastdListarInstitucionDestinosXJerDeId_tgTDocId(JerDeId, vtDocId)
        If listaJeraquia IsNot Nothing Then
            For Each fJerarquiaInst As EEJerarquiaSTD In listaJeraquia
                If InstitucionId = fJerarquiaInst.CodInstitucionDestino Then
                    valido = True
                    Exit For
                End If
            Next
        Else
            SaimtMessageBox.mostrarAlertaAdvertencia("No le es permitido enviar el documento a esta institucion")
            Return
        End If
        sCboArea.mColumnas(SaimtComboBoxLookUp.Entidades.JerAreaDestino)
        sCboArea.Properties.DisplayMember = "AreaDestino"
        sCboArea.Properties.ValueMember = "CodAreaDestino"
        sCboArea.Properties.DataSource = MantenimientosBL.Instancia.jerarquiastdListarAreasDestinosXJerDeId_tgTDocId(JerDeId, vtDocId, InstitucionId)
        sCboArea.ItemIndex = 0

        cboTipoDocPro.mColumnas(SaimtComboBoxLookUp.Entidades.TipoDocumentoSTD)
        cboTipoDocPro.Properties.DisplayMember = "TgNombre"
        cboTipoDocPro.Properties.ValueMember = "TgCodigo"
        cboTipoDocPro.Properties.DataSource = MantenimientosBL.Instancia.tablageneralListarXClsId(86)
        cboTipoDocPro.ItemIndex = 0

        cbotipoDocResp.mColumnas(SaimtComboBoxLookUp.Entidades.TipoDocumentoSTD)
        cbotipoDocResp.Properties.DisplayMember = "TgNombre"
        cbotipoDocResp.Properties.ValueMember = "TgCodigo"
        cbotipoDocResp.Properties.DataSource = cboTipoDocPro.Properties.DataSource
        cbotipoDocResp.ItemIndex = 0
    End Sub
    
    Private Sub btnInstitucion_Click(sender As System.Object, e As System.EventArgs) Handles btnInstitucion.Click
        Using fmConsultaTablaGeneral As frmConsultaTablaGeneral = New frmConsultaTablaGeneral(Cls_TramiteDoc.tgInstitucion)
            If fmConsultaTablaGeneral.ShowDialog() = DialogResult.OK Then
                Dim listaJeraquia As New List(Of EEJerarquiaSTD)
                Dim JerDeId As String = cargoOrigen
                Dim valido As Boolean = False
                listaJeraquia = MantenimientosBL.Instancia.jerarquiastdListarInstitucionDestinosXJerDeId_tgTDocId(JerDeId, vtDocId)
                If listaJeraquia IsNot Nothing Then
                    For Each fJerarquiaInst As EEJerarquiaSTD In listaJeraquia
                        sTxtInstitucion.EditValue = fmConsultaTablaGeneral.TgNombre
                        InstitucionId = fmConsultaTablaGeneral.TgCodigo
                        If InstitucionId = fJerarquiaInst.CodInstitucionDestino Then
                            valido = True
                            Exit For
                        End If
                    Next
                Else
                    SaimtMessageBox.mostrarAlertaAdvertencia("No le es permitido enviar el documento a esta institucion")
                    Return
                End If
                If valido = False Then
                    SaimtMessageBox.mostrarAlertaAdvertencia("No le es permitido enviar el documento a esta institucion")
                    Return
                End If
                sCboArea.mColumnas(SaimtComboBoxLookUp.Entidades.JerAreaDestino)
                sCboArea.Properties.DisplayMember = "AreaDestino"
                sCboArea.Properties.ValueMember = "CodAreaDestino"
                sCboArea.Properties.DataSource = MantenimientosBL.Instancia.jerarquiastdListarAreasDestinosXJerDeId_tgTDocId(JerDeId, vtDocId, InstitucionId)
                sCboArea.ItemIndex = 0
            End If
        End Using
    End Sub

    Private Sub sCboArea_EditValueChanged(sender As System.Object, e As System.EventArgs) Handles sCboArea.EditValueChanged
        If sCboArea.EditValue IsNot Nothing Then
            sCboCargoDest.mColumnas(SaimtComboBoxLookUp.Entidades.JerCargoDestino)
            sCboCargoDest.Properties.DisplayMember = "CargoDestino"
            sCboCargoDest.Properties.ValueMember = "CodCargoDestino"
            sCboCargoDest.Properties.DataSource = MantenimientosBL.Instancia.jerarquiastdListarCargosDestinosXJerDeId_tgTDocId(cargoOrigen, vtDocId, sCboArea.EditValue & InstitucionId)
            sCboCargoDest.ItemIndex = 0
            Cargar_CargoDest(sCboCargoDest.EditValue)
        End If

    End Sub
    Sub Cargar_CargoDest(CargoID As String)
        Dim lPersona As List(Of EEPersona)
        Dim carPerID As String = InstitucionId & sCboArea.EditValue & CargoID
        lPersona = MantenimientosBL.Instancia.personaListarXCargoId(carPerID)
        If lPersona IsNot Nothing Then
            LstTrabajador.Items.Clear()
            LstTrabajador.ValueMember = "PerId"
            LstTrabajador.DisplayMember = "PerNombreCompleto"
            LstTrabajador.DataSource = lPersona
        End If
    End Sub

    Private Sub sCboCargoDest_EditValueChanged(sender As System.Object, e As System.EventArgs) Handles sCboCargoDest.EditValueChanged
        If sCboCargoDest.EditValue IsNot Nothing Then
            Cargar_CargoDest(sCboCargoDest.EditValue)

        End If

    End Sub

    Private Sub BtnEnviar_Click(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles BtnEnviar.Click
        Try
            If String.IsNullOrEmpty(InstitucionId) Then
                SaimtMessageBox.mostrarAlertaAdvertencia("No ha Seleccionado la Institucion")
                btnInstitucion.Focus()
                Exit Sub
            End If

            If String.IsNullOrEmpty(sCboArea.EditValue) Then
                SaimtMessageBox.mostrarAlertaAdvertencia("No ha seleccionado el area ")
                sCboArea.Focus()
                Exit Sub
            End If

            If String.IsNullOrEmpty(sCboCargoDest.EditValue) Then
                SaimtMessageBox.mostrarAlertaAdvertencia("No ha seleccionado el cargo destino")
                sCboCargoDest.Focus()
                Exit Sub
            End If
            If String.IsNullOrEmpty(LstTrabajador.SelectedValue) Then
                SaimtMessageBox.mostrarAlertaAdvertencia("No ha seleccionado el Destinatario")
                LstTrabajador.Focus()
                Exit Sub
            End If

            Dim MovNroDocInt As String = String.Empty
            Dim MovTgTDocId As String = String.Empty
            Mensaje = String.Empty
            Select Case sCboTipoDestino.EditValue.ToString
                Case "04"
                    Mensaje = txtAsuntoEnviar.Text.Trim
                Case "01"
                    chlbasuntos.GetItemText(0)
                    For i As Integer = 0 To chlbasuntos.ItemCount - 1
                        If chlbasuntos.GetItemCheckState(i) = CheckState.Checked Then
                            If i = chlbasuntos.ItemCount - 1 Then
                                Mensaje = Mensaje & chlbasuntos.GetItemText(i)
                            Else
                                Mensaje = Mensaje & chlbasuntos.GetItemText(i) & ", "
                            End If
                        End If
                    Next

                    If String.IsNullOrEmpty(cboTipoDocPro.EditValue) Then
                        SaimtMessageBox.mostrarAlertaAdvertencia("No ha seleccionado el Tipo Documento")
                        cboTipoDocPro.Focus()
                        Exit Sub
                    End If
                    If String.IsNullOrEmpty(txtNroDocProv.EditValue) = True Or txtNroDocProv.EditValue = 0 Then
                        SaimtMessageBox.mostrarAlertaAdvertencia("No ha ingresado el Nro de Documento")
                        txtNroDocProv.Focus()
                        Exit Sub
                    End If

                    If String.IsNullOrEmpty(txtAnioProv.EditValue) = True Or txtAnioProv.EditValue = 0 Then
                        SaimtMessageBox.mostrarAlertaAdvertencia("No ha Ingresado el anio")
                        txtAnioProv.Focus()
                        Exit Sub
                    End If
                    If String.IsNullOrEmpty(txtSiglasProv.EditValue) = True Then
                        SaimtMessageBox.mostrarAlertaAdvertencia("No ha Ingresado la siglas del documento")
                        txtSiglasProv.Focus()
                        Exit Sub
                    End If

                    MovNroDocInt = txtNroDocProv.Text & "-" & txtAnioProv.Text & " SAIMT/" & txtSiglasProv.Text
                    MovTgTDocId = cboTipoDocPro.EditValue
                    If String.IsNullOrEmpty(Mensaje) Then
                        SaimtMessageBox.mostrarAlertaAdvertencia("No ha ingresado el Asunto o Comentario")
                        chlbasuntos.Focus()
                        Exit Sub
                    End If

                Case "03"
                    If String.IsNullOrEmpty(cbotipoDocResp.EditValue) Then
                        SaimtMessageBox.mostrarAlertaAdvertencia("No ha seleccionado el Tipo Documento")
                        cboTipoDocPro.Focus()
                        Exit Sub
                    End If
                    If String.IsNullOrEmpty(txtNroDocResp.EditValue) = True Or txtNroDocResp.EditValue = 0 Then
                        SaimtMessageBox.mostrarAlertaAdvertencia("No ha ingresado el Nro de Documento")
                        txtNroDocProv.Focus()
                        Exit Sub
                    End If

                    If String.IsNullOrEmpty(txtAnioResp.EditValue) = True Or txtAnioResp.EditValue = 0 Then
                        SaimtMessageBox.mostrarAlertaAdvertencia("No ha Ingresado el anio")
                        txtAnioResp.Focus()
                        Exit Sub
                    End If
                    If String.IsNullOrEmpty(txtSiglasResp.EditValue) = True Then
                        SaimtMessageBox.mostrarAlertaAdvertencia("No ha Ingresado la siglas del documento")
                        txtSiglasResp.Focus()
                        Exit Sub
                    End If

                    MovNroDocInt = txtNroDocResp.Text & "-" & txtAnioResp.Text & "-" & txtSiglasResp.Text
                    MovTgTDocId = cbotipoDocResp.EditValue
                    Mensaje = txtAsuntoRes.Text.Trim

                    If String.IsNullOrEmpty(Mensaje) Then
                        SaimtMessageBox.mostrarAlertaAdvertencia("No ha ingresado el Asunto o Comentario")
                        txtAsuntoRes.Focus()
                        Exit Sub
                    End If
            End Select
 

            Dim loMovimiento As EEMovimientoSTD = Nothing
 
            loMovimiento = New EEMovimientoSTD()
            loMovimiento.DocId = txtdocID.EditValue
            loMovimiento.MovDe = cargoOrigen
            loMovimiento.MovPara = InstitucionId & sCboArea.EditValue & sCboCargoDest.EditValue
            loMovimiento.MovComentario = Mensaje
            loMovimiento.TgEstadoMovId = sCboEstado.EditValue
            loMovimiento.tgTDestinoId = sCboTipoDestino.EditValue
            loMovimiento.MovPerIdDe = EEComun._PerId
            loMovimiento.MovPerIdPara = LstTrabajador.SelectedValue
            loMovimiento.MovNroDocInt = MovNroDocInt
            loMovimiento.movTgTDocId = MovTgTDocId
            If txtBuscarArchivo.Text <> String.Empty Then
                Dim loImageConver As ImageConver = New ImageConver
                loMovimiento.MovArch = loImageConver.FileToByteArray(txtBuscarArchivo.Text)
            End If
        
            If MantenimientosBL.Instancia.movimientoSTDGuardar(loMovimiento) = True Then
                SaimtMessageBox.mostrarAlertaInformativa("Se envio Correctamente el documento")
                Me.Close()
            Else
                SaimtMessageBox.mostrarAlertaAdvertencia("Error al Intentar Enviar")
            End If

        Catch ex As Exception
            SaimtMessageBox.mostrarAlertaError(ex.Message)
        End Try
    End Sub

 

    Private Sub sCboEstado_EditValueChanged(sender As System.Object, e As System.EventArgs) Handles sCboEstado.EditValueChanged
        sCboTipoDestino.mColumnas(SaimtComboBoxLookUp.Entidades.TablaGeneral)
        sCboTipoDestino.Properties.DisplayMember = "TgNombre"
        sCboTipoDestino.Properties.ValueMember = "TgCodigo"
        sCboTipoDestino.Properties.DataSource = MantenimientosBL.Instancia.tablageneralListar_XClsId_XTgExtra(Cls_TramiteDoc.tgTipoDestinoVsEstado, sCboEstado.EditValue)
        sCboTipoDestino.ItemIndex = 0
        chlbasuntos.DataSource = MantenimientosBL.Instancia.tablageneralListarXClsId(209)
        chlbasuntos.DisplayMember = "TgNombre"
        chlbasuntos.ValueMember = "TgCodigo"
        cbotipoDocResp.mColumnas(SaimtComboBoxLookUp.Entidades.TablaGeneral)
        cbotipoDocResp.Properties.DisplayMember = "TgNombre"
        cbotipoDocResp.Properties.ValueMember = "TgCodigo"
        cbotipoDocResp.Properties.DataSource = MantenimientosBL.Instancia.tablageneralListarXClsId(86)
        cbotipoDocResp.ItemIndex = 1
    End Sub


    Private Sub sCboTipoDestino_Click(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles sCboTipoDestino.Click
        If sCboTipoDestino.EditValue Is Nothing Then
            SaimtMessageBox.mostrarAlertaInformativa("Usted a seleccionado el de estado de tramite : " & sCboEstado.Text)
        End If
    End Sub
 

    Private Sub sCboTipoDestino_EditValueChanged(sender As System.Object, e As System.EventArgs) Handles sCboTipoDestino.EditValueChanged
        XtraTabPage1.PageVisible = False
        XtraTabPage2.PageVisible = False
        XtraTabPage3.PageVisible = False
        Select Case sCboTipoDestino.EditValue.ToString
            Case "04"
                xtabAcciones.SelectedTabPageIndex = 0
                XtraTabPage1.PageVisible = True
            Case "01"
                xtabAcciones.SelectedTabPageIndex = 1
                XtraTabPage2.PageVisible = True
            Case "03"
                xtabAcciones.SelectedTabPageIndex = 2
                XtraTabPage3.PageVisible = True
        End Select
    End Sub
    Dim ListaExtenciones As List(Of EETablaGeneral) = MantenimientosBL.Instancia.tablageneralMostrarXClsId(30)

    Private Sub btnExaminarArchivo_Click(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles btnExaminarArchivo.Click
        If ofdExaminarArchivos.ShowDialog() = DialogResult.OK Then
            Dim lsArchSplit As String() = ofdExaminarArchivos.FileName.Split(".")
            Dim Ext, Peso, CodigoExt As String
            For Each loExt As EETablaGeneral In ListaExtenciones
                If loExt.TgAbrev.Contains(lsArchSplit(lsArchSplit.Length - 1)) Then
                    Ext = lsArchSplit(lsArchSplit.Length - 1)
                    Peso = loExt.TgExtra
                    CodigoExt = loExt.TgCodigo
                End If
            Next
            Dim f2 As FileInfo = New FileInfo(ofdExaminarArchivos.FileName)
            If (f2.Length / 1024) > Peso Then
                SaimtMessageBox.mostrarAlertaError(String.Format("El Archivo Seleccionado Tiene {0} KB.{1}El Peso Requerido Para los Archivos Word es de {2} KB.", (f2.Length / 1024), Environment.NewLine, Peso))
            Else
                txtBuscarArchivo.Text = ofdExaminarArchivos.FileName
            End If
        End If
    End Sub

End Class